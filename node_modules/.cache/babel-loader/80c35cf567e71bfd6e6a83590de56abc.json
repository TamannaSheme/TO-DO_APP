{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Downloads\\\\to-do\\\\src\\\\Components\\\\ToDo\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { FiEdit } from 'react-icons/fi';\nimport TodoForm from './TodoForms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  _s();\n\n  let {\n    todos,\n    completeTodo,\n    removeTodo,\n    updateTodo\n  } = _ref;\n  console.log(todos);\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 20\n    }, this);\n  }\n\n  return todos.map((toDo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: toDo.isComplete ? 'toDo-row complete' : 'toDo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(toDo.id),\n      children: toDo.text\n    }, toDo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(AiOutlineCloseCircle, {\n        onClick: () => removeTodo(toDo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(FiEdit, {\n        onClick: () => setEdit({\n          id: toDo.id,\n          value: toDo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this));\n};\n\n_s(Todo, \"BgZq30POjYhmRan6A92KrKpY+vA=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","AiOutlineCloseCircle","FiEdit","TodoForm","Todo","todos","completeTodo","removeTodo","updateTodo","console","log","edit","setEdit","id","value","submitUpdate","map","toDo","index","isComplete","text"],"sources":["C:/Users/Hp/Downloads/to-do/src/Components/ToDo/Todo.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { FiEdit } from 'react-icons/fi';\nimport TodoForm from './TodoForms';\n\nconst Todo = ({todos,completeTodo,removeTodo,updateTodo}) => {\n   console.log(todos);\n    \n        const [edit,setEdit] = useState({\n            id:null,\n            value:''\n        });\n    \n        const submitUpdate = value=>{\n            updateTodo(edit.id,value)\n            setEdit({\n                id:null, \n                value:''\n            })\n        }\n\n        if(edit.id){\n            return <TodoForm edit={edit} onSubmit={submitUpdate} />\n\n        }\n    \n        return todos.map((toDo,index)=>(\n            <div className={toDo.isComplete? 'toDo-row complete' : 'toDo-row'} key={index}>\n    \n        <div key={toDo.id} onClick={() => completeTodo(toDo.id)}>\n                   {toDo.text}\n                   </div>\n                   <div className='icons'>\n                   <AiOutlineCloseCircle \n                   onClick={()=>removeTodo(toDo.id)}\n                   className='delete-icon'\n                   />\n                   <FiEdit\n                   onClick={()=>setEdit({id: toDo.id,value:toDo.text})}\n                   className='edit-icon'/>\n                     \n                  \n                 </div>\n    \n    \n            </div>\n        ))\n       \n \n        \n};\n\nexport default Todo;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,oBAAT,QAAqC,gBAArC;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;;;AAEA,MAAMC,IAAI,GAAG,QAAgD;EAAA;;EAAA,IAA/C;IAACC,KAAD;IAAOC,YAAP;IAAoBC,UAApB;IAA+BC;EAA/B,CAA+C;EAC1DC,OAAO,CAACC,GAAR,CAAYL,KAAZ;EAEK,MAAM,CAACM,IAAD,EAAMC,OAAN,IAAiBZ,QAAQ,CAAC;IAC5Ba,EAAE,EAAC,IADyB;IAE5BC,KAAK,EAAC;EAFsB,CAAD,CAA/B;;EAKA,MAAMC,YAAY,GAAGD,KAAK,IAAE;IACxBN,UAAU,CAACG,IAAI,CAACE,EAAN,EAASC,KAAT,CAAV;IACAF,OAAO,CAAC;MACJC,EAAE,EAAC,IADC;MAEJC,KAAK,EAAC;IAFF,CAAD,CAAP;EAIH,CAND;;EAQA,IAAGH,IAAI,CAACE,EAAR,EAAW;IACP,oBAAO,QAAC,QAAD;MAAU,IAAI,EAAEF,IAAhB;MAAsB,QAAQ,EAAEI;IAAhC;MAAA;MAAA;MAAA;IAAA,QAAP;EAEH;;EAED,OAAOV,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,kBACb;IAAK,SAAS,EAAED,IAAI,CAACE,UAAL,GAAiB,mBAAjB,GAAuC,UAAvD;IAAA,wBAEJ;MAAmB,OAAO,EAAE,MAAMb,YAAY,CAACW,IAAI,CAACJ,EAAN,CAA9C;MAAA,UACYI,IAAI,CAACG;IADjB,GAAUH,IAAI,CAACJ,EAAf;MAAA;MAAA;MAAA;IAAA,QAFI,eAKO;MAAK,SAAS,EAAC,OAAf;MAAA,wBACA,QAAC,oBAAD;QACA,OAAO,EAAE,MAAIN,UAAU,CAACU,IAAI,CAACJ,EAAN,CADvB;QAEA,SAAS,EAAC;MAFV;QAAA;QAAA;QAAA;MAAA,QADA,eAKA,QAAC,MAAD;QACA,OAAO,EAAE,MAAID,OAAO,CAAC;UAACC,EAAE,EAAEI,IAAI,CAACJ,EAAV;UAAaC,KAAK,EAACG,IAAI,CAACG;QAAxB,CAAD,CADpB;QAEA,SAAS,EAAC;MAFV;QAAA;QAAA;QAAA;MAAA,QALA;IAAA;MAAA;MAAA;MAAA;IAAA,QALP;EAAA,GAAwEF,KAAxE;IAAA;IAAA;IAAA;EAAA,QADG,CAAP;AAwBP,CA7CD;;GAAMd,I;;KAAAA,I;AA+CN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}